{%- comment -%} 
  Sale Discount Filter snippet
  Renders small banner/buttons and client-side JS to filter product grid by data-max-discount. 
{%- endcomment -%}

<style>
  /* Minimal styles â€” move to your theme CSS if you prefer */
  .sale-discount-filter {
    margin-top: 12px;
  }
  .sale-discount-filter__buttons {
    display: flex;
    flex-wrap: wrap;
    gap: 12px;
    margin-top: 12px;
  }
  .sale-discount-btn {
    background: #fd1d1b;
    color: #fff !important;
    padding: 8px 14px;
    border-radius: 6px;
    font-weight: 600;
    border: none;
    cursor: pointer;
    box-shadow: 0 6px 18px rgba(253, 29, 27, 0.25);
  }
  .sale-discount-btn.sale-clear {
    background: #f3f3f3;
    color: #222 !important;
    box-shadow: none;
  }
  .sale-discount-btn.active {
    transform: translateY(-2px);
    box-shadow: 0 10px 24px rgba(0, 0, 0, 0.12);
  }
  .sale-discount-filter__label {
    font-size: 14px;
    color: #333;
  }
  @media (max-width: 520px) {
    .sale-discount-filter__buttons {
      gap: 8px;
    }
    .sale-discount-btn {
      padding: 7px 10px;
      font-size: 14px;
    }
  }
</style>

<div class="sale-discount-filter" aria-hidden="false">
  <div class="sale-discount-filter__label">Show items:</div>
  <div
    class="sale-discount-filter__buttons"
    role="toolbar"
    aria-label="Filter by discount">
    <button
      class="sale-discount-btn"
      data-max="25"
      type="button">Up to 25% off</button>
    <button
      class="sale-discount-btn"
      data-max="35"
      type="button">Up to 35% off</button>
    <button
      class="sale-discount-btn"
      data-max="50"
      type="button">Up to 50% off</button>
    <button
      class="sale-discount-btn sale-clear"
      data-max="0"
      type="button">Clear</button>
  </div>
</div>

<script>
  (function(){
  function getGridItems(){
    return document.querySelectorAll('#product-grid .grid__item, .product-grid .grid__item');
  }
  
  function applyFilter(max){
    var items = getGridItems();
    items.forEach(function(li){
      // attribute may be missing; default 0
      var md = parseInt(li.getAttribute('data-max-discount') || '0', 10);
      if(!max || max === 0){
        li.style.display = '';
      } else {
        if(md > 0 && md <= max){
          li.style.display = '';
        } else {
          li.style.display = 'none';
        }
      }
    });
  
    // set active class
    document.querySelectorAll('.sale-discount-btn').forEach(function(btn){
      var btnMax = parseInt(btn.getAttribute('data-max')||'0',10);
      btn.classList.toggle('active', btnMax === max);
    });
  
    // update URL param without reload
    if(window.history && window.history.replaceState){
      try{
        var url = new URL(window.location);
        if(!max || max === 0){
          url.searchParams.delete('discount');
        } else {
          url.searchParams.set('discount', String(max));
        }
        window.history.replaceState({}, '', url);
      }catch(e){ /* ignore on older browsers */ }
    }
  }
  
  function init(){
    // attach handlers
    document.querySelectorAll('.sale-discount-btn').forEach(function(btn){
      btn.addEventListener('click', function(){
        var max = parseInt(this.getAttribute('data-max')||'0',10);
        applyFilter(max);
      });
    });
  
    // on load, check URL param
    var params = new URLSearchParams(window.location.search);
    if(params.has('discount')){
      var d = parseInt(params.get('discount'), 10);
      if(!isNaN(d) && d > 0){
        applyFilter(d);
      }
    }
  }
  
  // re-apply filter when product grid changes (pagination / AJAX load)
  function watchGrid(){
    var grid = document.querySelector('#product-grid, .product-grid');
    if(!grid) return;
    var observer = new MutationObserver(function(){
      var params = new URLSearchParams(window.location.search);
      var d = parseInt(params.get('discount')||'0',10);
      if(!isNaN(d) && d>0){
        applyFilter(d);
      }
    });
    observer.observe(grid, { childList: true, subtree: true });
  }
  
  document.addEventListener('DOMContentLoaded', function(){
    init();
    watchGrid();
  });
  })();
</script>